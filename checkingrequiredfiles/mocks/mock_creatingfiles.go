// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Appliscale/perun/checkingrequiredfiles (interfaces: CreatingFiles)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "github.com/Appliscale/perun/context"
	logger "github.com/Appliscale/perun/logger"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCreatingFiles is a mock of CreatingFiles interface
type MockCreatingFiles struct {
	ctrl     *gomock.Controller
	recorder *MockCreatingFilesMockRecorder
}

// MockCreatingFilesMockRecorder is the mock recorder for MockCreatingFiles
type MockCreatingFilesMockRecorder struct {
	mock *MockCreatingFiles
}

// NewMockCreatingFiles creates a new mock instance
func NewMockCreatingFiles(ctrl *gomock.Controller) *MockCreatingFiles {
	mock := &MockCreatingFiles{ctrl: ctrl}
	mock.recorder = &MockCreatingFilesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCreatingFiles) EXPECT() *MockCreatingFilesMockRecorder {
	return m.recorder
}

// addNewProfileFromCredentialsToConfig mocks base method
func (m *MockCreatingFiles) AddNewProfileFromCredentialsToConfig(arg0, arg1 string, arg2 *context.Context, arg3 logger.LoggerInt) {
	m.ctrl.Call(m, "AddNewProfileFromCredentialsToConfig", arg0, arg1, arg2, arg3)
}

// addNewProfileFromCredentialsToConfig indicates an expected call of addNewProfileFromCredentialsToConfig
func (mr *MockCreatingFilesMockRecorder) AddNewProfileFromCredentialsToConfig(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewProfileFromCredentialsToConfig", reflect.TypeOf((*MockCreatingFiles)(nil).AddNewProfileFromCredentialsToConfig), arg0, arg1, arg2, arg3)
}

// addProfileToCredentials mocks base method
func (m *MockCreatingFiles) AddProfileToCredentials(arg0, arg1 string, arg2 *context.Context, arg3 logger.LoggerInt) {
	m.ctrl.Call(m, "AddProfileToCredentials", arg0, arg1, arg2, arg3)
}

// addProfileToCredentials indicates an expected call of addProfileToCredentials
func (mr *MockCreatingFilesMockRecorder) AddProfileToCredentials(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProfileToCredentials", reflect.TypeOf((*MockCreatingFiles)(nil).AddProfileToCredentials), arg0, arg1, arg2, arg3)
}

// configIsPresent mocks base method
func (m *MockCreatingFiles) ConfigIsPresent(arg0, arg1 string, arg2 *context.Context, arg3 logger.LoggerInt) (string, context.Context) {
	ret := m.ctrl.Call(m, "ConfigIsPresent", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(context.Context)
	return ret0, ret1
}

// configIsPresent indicates an expected call of configIsPresent
func (mr *MockCreatingFilesMockRecorder) ConfigIsPresent(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigIsPresent", reflect.TypeOf((*MockCreatingFiles)(nil).ConfigIsPresent), arg0, arg1, arg2, arg3)
}

// createCredentials mocks base method
func (m *MockCreatingFiles) CreateCredentials(arg0, arg1 string, arg2 *context.Context, arg3 logger.LoggerInt) {
	m.ctrl.Call(m, "CreateCredentials", arg0, arg1, arg2, arg3)
}

// createCredentials indicates an expected call of createCredentials
func (mr *MockCreatingFilesMockRecorder) CreateCredentials(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCredentials", reflect.TypeOf((*MockCreatingFiles)(nil).CreateCredentials), arg0, arg1, arg2, arg3)
}

// createNewMainYaml mocks base method
func (m *MockCreatingFiles) CreateNewMainYaml(arg0, arg1 string, arg2 *context.Context, arg3 logger.LoggerInt) context.Context {
	ret := m.ctrl.Call(m, "createNewMainYaml", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// createNewMainYaml indicates an expected call of createNewMainYaml
func (mr *MockCreatingFilesMockRecorder) CreateNewMainYaml(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewMainYaml", reflect.TypeOf((*MockCreatingFiles)(nil).CreateNewMainYaml), arg0, arg1, arg2, arg3)
}

// newConfigFile mocks base method
func (m *MockCreatingFiles) NewConfigFile(arg0, arg1, arg2 string, arg3 *context.Context, arg4 logger.LoggerInt) (string, string, context.Context) {
	ret := m.ctrl.Call(m, "NewConfigFile", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(context.Context)
	return ret0, ret1, ret2
}

// newConfigFile indicates an expected call of newConfigFile
func (mr *MockCreatingFilesMockRecorder) NewConfigFile(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewConfigFile", reflect.TypeOf((*MockCreatingFiles)(nil).NewConfigFile), arg0, arg1, arg2, arg3, arg4)
}

// useProfileFromConfig mocks base method
func (m *MockCreatingFiles) UseProfileFromConfig(arg0 []string, arg1 string, arg2 logger.LoggerInt) string {
	ret := m.ctrl.Call(m, "UseProfileFromConfig", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	return ret0
}

// useProfileFromConfig indicates an expected call of useProfileFromConfig
func (mr *MockCreatingFilesMockRecorder) UseProfileFromConfig(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UseProfileFromConfig", reflect.TypeOf((*MockCreatingFiles)(nil).UseProfileFromConfig), arg0, arg1, arg2)
}
