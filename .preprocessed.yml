AWSTemplateFormatVersion: "2010-09-09"

Description: >
  HB S2S Creatives Scripts stack which creates all necessary dependencies for that, based on environment. Including
  external Elastic IP needed for production system, for communication with 3rd party used for creatives scanning done
  on our side.

Parameters:

  ENV:
    Description: >
      This points out which region and stage should be used - we call it an environment.
    Type: String
    Default: eu-central-1.dev
    AllowedValues:
      - eu-central-1.dev
      - eu-central-1.qa
      - eu-central-1.prod
      - ap-southeast-1.prod
      - us-east-1.prod
      - us-west-2.prod
    ConstraintDescription: >
      Must be one of the defined allowed values.

Mappings:

  EnvSettings:
    eu-central-1.dev:
      SecurityGroupId: sg-b30848da # private
      SubnetIds:
        - subnet-74c0a61d # eu-central-1a, private
        - subnet-db7cf8a0 # eu-central-1b, private
      HostedZone: dev.adtech.aolcloud.net
      AmiId: ami-183a9e77
      Stage: dev
      Capacity: 1
      OrbProjectId: "68748238"

    eu-central-1.qa:
      SecurityGroupId: sg-4b074722 # private
      SubnetIds:
        - subnet-8bc2a4e2 # eu-central-1a, private
        - subnet-0873f773 # eu-central-1b, private
      HostedZone: qa.adtech.aolcloud.net
      AmiId: ami-d8389cb7
      Stage: qa
      Capacity: 1
      OrbProjectId: "68748252"

    eu-central-1.prod:
      SecurityGroupId: sg-5af3b233 # public
      SubnetIds:
        - subnet-e06ce89b # eu-central-1b, public
        - subnet-10f39579 # eu-central-1a, public
      HostedZone: prod.adtech.aolcloud.net
      AmiId: ami-673f9208
      Stage: prod
      Capacity: 2
      OrbProjectId: "68748228"

    ap-southeast-1.prod:
      SecurityGroupId: sg-672bc601 # public
      SubnetIds:
        - subnet-91a8a2e7 # ap-southeast-1a, public
        - subnet-54907133 # ap-southeast-1b, public
      HostedZone: prod.adtech.aolcloud.net
      AmiId: ami-fd196f9e
      Stage: prod
      Capacity: 2
      OrbProjectId: "68748228"

    us-east-1.prod:
      SecurityGroupId: sg-d4cbd4af # public
      SubnetIds:
        - subnet-56b18e0e # us-east-1a, public
        - subnet-3d291617 # us-east-1c, public
      HostedZone: prod.adtech.aolcloud.net
      AmiId: ami-c81935de
      Stage: prod
      Capacity: 2
      OrbProjectId: "68748228"

    us-west-2.prod:
      SecurityGroupId: sg-1f2e7f79 # public
      SubnetIds:
        - subnet-adc286c9 # us-west-2a, public
        - subnet-fa30ac8c # us-west-2b, public
      HostedZone: prod.adtech.aolcloud.net
      AmiId: ami-7b8c8602
      Stage: prod
      Capacity: 2
      OrbProjectId: "68748228"

Conditions:
  OnlyProduction: { "Fn::Equals": [ prod, "Fn::FindInMap": [ EnvSettings, "Ref": ENV, Stage ] ]}

Resources:

  # We need 2 ElasticIPs and it will require manual
  # association after creating it. No scripting for it.

  YumRepositoryAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 
        Fn::Sub:
        - "adtech-s2s-yum-access-rtb-cs-${AWS::Region}-${Stage}"
        - Stage: { "Fn::FindInMap": [ EnvSettings, "Ref": ENV, Stage ]}
      Policies:
        - PolicyName: 
            Fn::Sub:
            - "adtech-s2s-yum-access-policy-rtb-cs-${AWS::Region}-${Stage}"
            - Stage: { "Fn::FindInMap": [ EnvSettings, "Ref": ENV, Stage ]}
          PolicyDocument:
            Version: "2012-10-17"
            AvailabilityZone: 
              Fn::Select:
              - "Fn::FindInMap": [ RegionMap, "Ref": "AWS::Region", 32 ]
              - Fn::GetAZs: 
                  Ref: "AWS::Region"
            Statement:
              - Action:
                  - s3:ListAllMyBuckets
                Effect: Allow
                Resource:
                  - arn:aws:s3:::*
              - Action:
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  - Fn::Sub:
                    - "arn:aws:s3:::${BucketName}"
                    - BucketName: { "Fn::ImportValue": "adtech-s2s-rtb-yum-repository-bucket-name"}
              - Action:
                  - s3:*
                Effect: Allow
                Resource:
                  - Fn::Sub:
                    - "arn:aws:s3:::${BucketName}/*"
                    - BucketName: { "Fn::ImportValue": "adtech-s2s-rtb-yum-repository-bucket-name"}

  CreativesScriptsLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - ReadAccessToYumRepository
    Properties:
      InstanceType: m4.xlarge
      InstanceMonitoring: true
      IamInstanceProfile: { "Fn::GetAtt": "ReadAccessToYumRepository.Arn"}
      ImageId: { "Fn::FindInMap": [ EnvSettings, "Ref": ENV, AmiId ]}
      SecurityGroups:
        - "Fn::FindInMap": [ EnvSettings, "Ref": ENV, SecurityGroupId ]
      EbsOptimized: true
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
      UserData:
        "Fn::Base64":
          "Fn::Sub":
            #!/bin/bash -xe
            /usr/bin/cfn-init -v --stack ${AWS::StackName} --resource CreativesScriptsLaunchConfiguration --region ${AWS::Region}
            /usr/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource CreativesScriptsAutoScalingGroup --region ${AWS::Region}


Outputs: {}

